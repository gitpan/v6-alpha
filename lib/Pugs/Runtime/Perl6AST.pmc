# Generated by v6 0.013 (Module::Compile 0.18) - do not edit!
################((( 32-bit Checksum Validator III )))################
#line 1
BEGIN { use 5.006; local (*F, $/); ($F = __FILE__) =~ s!c$!!; open(F)
or die "Cannot open $F: $!"; binmode(F, ':crlf'); if (unpack('%32N*',
$F=readline(*F)) != 0x1AAC20BA) { use Filter::Util::Call; my $f = $F;
filter_add(sub { filter_del(); 1 while &filter_read; $_ = $f; 1; })}}
#line 1
package main;
use Config;
use lib split( /\Q$Config{path_sep}/, $ENV{PERL6LIB} || '' );
use Scalar::Util;
use Pugs::Runtime::Perl6;
use Pugs::Runtime::Perl6Prelude;
use strict;
no strict 'refs';
no warnings( 'void', 'uninitialized' );
$::_V6_COMPILER_OS      = 'linux';
$::_V6_COMPILER_NAME    = 'v6.pm';
$::_V6_COMPILER_VERSION = '0.013';
my %_V6_PAD;
our %_V6_STATE;

# use v6-alpha
package v6::AST;
use Exporter 'import';
push our @ISA, 'Exporter';
our @EXPORT;
$INC{"v6/AST.pm"} = 1;

sub node {
  my %_V6_PAD;
  my ( $match, $type );
  Data::Bind->arg_bind( \@_ );

  $type->create($match)
    if ref $match;

}
## Signature for node
Data::Bind->sub_signature( \&node, { 'attribute' => [], 'is_slurpy' => '', 'named_only' => '', 'optional' => '', 'type' => undef, 'var' => '$match' }, { 'attribute' => [], 'is_slurpy' => '', 'named_only' => '', 'optional' => '', 'type' => undef, 'var' => '$type' } );

package v6::AST::Base;
use Exporter 'import';
push our @ISA, 'Exporter';
our @EXPORT;
$INC{"v6/AST/Base.pm"} = 1;

use Data::Dumper;

sub create {

  # 90d5ab6bf34f5e23b91dc6656310c0cefe9428cb
  bless \( $_[1]->flat ), $_[0];
}

sub str {

  # 359cd99beab3702171eead0d9145619baa8c6c01
  my $s = ${ $_[0] };
  return $s;
}

1;
